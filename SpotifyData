# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next I explored the data with the following SQL.

#First, I looked at the top five most popular songs.
SELECT artist_name, track_name, popularity 
FROM BIT_DB.Spotifydata
ORDER BY popularity
LIMIT 5;

#Next, I wanted to know which song were most and least danceable. 
SELECT MAX(danceability), artist_name, track_name
FROM BIT_DB.Spotifydata;

SELECT MIN(danceability), artist_name, track_name
FROM BIT_DB.Spotifydata;


#How many songs included in the data are by my favorite artist?
SELECT COUNT(*)
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Doja Cat';

#How danceable are her songs on average?
SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Doja Cat';

#What are the top five loudest songs?
SELECT track_name, artist_name, loudness
FROM BIT_DB.Spotifydata
ORDER BY loudness
LIMIT 5;

#What are the least loud songs?
SELECT track_name, artist_name, loudness
FROM BIT_DB.Spotifydata
ORDER BY loudness DESC
LIMIT 5; 

#What are the top three songs with the highest and lowest tempos?
SELECT track_name, artist_name, tempo
FROM BIT_DB.Spotifydata
ORDER BY tempo 
LIMIT 3;

SELECT track_name, artist_name, tempo
FROM BIT_DB.Spotifydata
ORDER BY tempo DESC
LIMIT 3;

